
#Область ПрограммныйИнтерфейс

Функция ОткрытьТурникет(Контроллер = Неопределено) Экспорт
	
	Если Контроллер = Неопределено Тогда
		Попытка
			Контроллер = ПодключитьКонтроллер();
		Исключение
			Контроллер = Неопределено;
		КонецПопытки;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Контроллер) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ТекстОшибки = "";
	
	//TODO:
	// Необходимо добавить механизм запроса компоненты котроллера.
	//Если Контроллер.Открыть(Состояние) = Истина Тогда
	Если Истина Тогда
		СообщитьОбИнциденте(
			Перечисления.пропуск_ТипыСообщений.Сообщение_ТурникетОткрыт);
		Возврат Истина;
	Иначе
		СообщитьОбИнциденте(
			Перечисления.пропуск_ТипыСообщений.Сообщение_ОшибкаОткрытияТурникета,
			ТекстОшибки);
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

Функция ОтразитьОткрытиеТурникетаПоСотруднику(Сотрудник = Неопределено, ИдентификаторПропуска = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТекущийСотрудник = Справочники.Пользователи.ПустаяСсылка();
	
	Если Сотрудник = Неопределено И НЕ ИдентификаторПропуска = Неопределено Тогда
		
		ТекущийСотрудник = НайтиСотрудникаПоИДПропуска(ИдентификаторПропуска);
		
	ИначеЕсли ЗначениеЗаполнено(Сотрудник) Тогда
		
		ТекущийСотрудник = Сотрудник;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущийСотрудник) Тогда
		
		ПараметрыЗаписи = Новый Структура;
		ПараметрыЗаписи.Вставить("Сотрудник", ТекущийСотрудник);
		ПараметрыЗаписи.Вставить("ИдентификаторПропуска", ИдентификаторПропуска);
		ПараметрыЗаписи.Вставить("Вход", Истина);
		
		ЗаписатьВЖурналПосещений(ПараметрыЗаписи);
		
		Возврат Истина;
		
	Иначе
		
		СообщитьОбИнциденте(
			Перечисления.пропуск_ТипыСообщений.Сообщение_СотрудникНеНайденПоИдентификаторуПропуска,
			ИдентификаторПропуска);
		
		Возврат Ложь;
		
	КонецЕсли;
	
КонецФункции

Функция НайтиСотрудникаПоИДПропуска(ИдентификаторПропуска) Экспорт
	
	ТекущийСотрудник = Справочники.Пользователи.ПустаяСсылка();
	
	Отбор = Новый Структура;
	Отбор.Вставить("пропуск_ИдентификаторПропуска", ИдентификаторПропуска);
	Выборка = Справочники.Пользователи.Выбрать(,, Отбор);
	
	Если Выборка.Следующий() Тогда
		ТекущийСотрудник = Выборка.Ссылка;
	КонецЕсли;
	
	Возврат ТекущийСотрудник;
	
КонецФункции

Процедура ЗаписатьВЖурналПосещений(ПараметрыЗаписи) Экспорт
	
	ТекущаяДата = ТекущаяДата();
	
	НаборЗаписей = РегистрыСведений.пропуск_ЖурналПосещений.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Установить(ТекущаяДата);
	
	Запись = НаборЗаписей.Добавить();
	Запись.Период = ТекущаяДата;
	Запись.Сотрудник = ПараметрыЗаписи.Сотрудник;
	Запись.ИдентификаторПропуска = ПараметрыЗаписи.ИдентификаторПропуска;
	Запись.Вход = ПараметрыЗаписи.Вход;
	
	НаборЗаписей.Записать();
	
	// Логирование++
	Сообщение = пропуск_Логирование.ПустоеСообщение();
	Если ЗначениеЗаполнено(ПараметрыЗаписи.Сотрудник) Тогда
		Сообщение.Тип = Перечисления.пропуск_ТипыСообщений.ОткрытиеТурникетаСотруднику;
		Сообщение.Текст =
			СтрШаблон(
				"Открытие турникета для %1: %2",
				ПараметрыЗаписи.Сотрудник,
				ПараметрыЗаписи.ИдентификаторПропуска);
		Сообщение.Контекст = ПараметрыЗаписи.Сотрудник;
	Иначе
		Сообщение.Тип = Перечисления.пропуск_ТипыСообщений.ОткрытиеТурникета;
		Сообщение.Текст = "Открытие турникета";
	КонецЕсли;
	пропуск_Логирование.ЗаписатьЛог(Сообщение);
	// Логирование--
	
КонецПроцедуры

Процедура СообщитьОбИнциденте(Тип, КонтекстСтрокой = "") Экспорт
	
	Представление = Строка(Тип);
	
	ТекстСообщения = СтрШаблон("%1 %2", Представление, КонтекстСтрокой);
	
	ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	
КонецПроцедуры

Функция СообщениеПоТипу(Тип) Экспорт
	
	Представление = "";
	Для Каждого ТекущийЭлемент Из Метаданные.Перечисления.пропуск_ТипыСообщений.ЗначенияПеречисления Цикл
		Если ТекущийЭлемент.Представление() = Строка(Тип) Тогда
			Представление = ТекущийЭлемент.Синоним;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Представление;
	
КонецФункции

#КонецОбласти

#Область СлужебныйИнтерфейс

Функция ПодключитьКонтроллер(ОбъектКонтроллера = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ОбъектКонтроллера) Тогда
		ОбъектКонтроллера = Новый Структура;
		ОбъектКонтроллера.Вставить("ОбъектКонтроллера", ПолучитьОбщийМакет("пропуск_Контроллер"));
	КонецЕсли;
	
	//TODO:
	// Необходимо добавить механизм подключения компоненты котроллера.
	
	ЮТест.Пауза(2);
	
	Возврат ОбъектКонтроллера;
	
КонецФункции

#КонецОбласти

