
Процедура ИсполняемыеСценарии() Экспорт
	
	ЮТТесты.ДобавитьТестовыйНабор("ПроверкаРаботыТурникета").ВТранзакции()
		.ДобавитьТест("ПодключитьКонтроллерПозитив", "", "Позитив")
		.ДобавитьТест("ПодключитьКонтроллерНегатив", "", "Негатив")
		;
	
	ЮТТесты.ДобавитьТестовыйНабор("РаботаКонтролера").ВТранзакции()
		.ДобавитьТест("ОткрытьТурникетПозитив", "", "Позитив")
		.ДобавитьТест("ОткрытьТурникетНегатив", "", "Негатив")
		.ДобавитьТест("ОткрытьТурникетСотрудникуПоПропускуПозитив", "", "Позитив")
		.ДобавитьТест("ОткрытьТурникетСотрудникуПоПропускуНегатив", "", "Негатив")
		;
	
	ЮТТесты.ДобавитьТестовыйНабор("РаботаОператора").ВТранзакции()
		.ДобавитьТест("СоздатьПользователяПозитив", "", "Позитив")
		.ДобавитьТест("СоздатьПользователяНегатив", "", "Негатив")
		;
	
КонецПроцедуры

Процедура СоздатьПользователяПозитив() Экспорт
	
	НовыйПользователь = Справочники.Пользователи.СоздатьЭлемент();
	
	Подражатель = ЮТТестовыеДанные.Подражатель();
	ФИО = Подражатель.Люди().ФИО(ЮТПодражатель_Люди.ПолЧеловека().Мужской);
	
	НовыйПользователь.Наименование = ФИО;
	
	НовыйПользователь.Записать();
	
	ИдентификаторПропуска = пропуск_РаботаСПропусками.СгенерироватьИдентификаторПропускаПользователя(НовыйПользователь.Ссылка);
	
	Если ЗначениеЗаполнено(ИдентификаторПропуска) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Пользователи.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|ГДЕ
		|	Пользователи.пропуск_ИдентификаторПропуска = &пропуск_ИдентификаторПропуска
		|	И Пользователи.Недействителен = ЛОЖЬ";
		
		Запрос.УстановитьПараметр("пропуск_ИдентификаторПропуска", ИдентификаторПропуска);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			
			ЮТест.ОжидаетЧто(НовыйПользователь.Ссылка)
				.Равно(Выборка.Ссылка);
			
		Иначе
			
			ЮТест.ОжидаетЧто(Истина)
				.Равно(Ложь);
			
		КонецЕсли;
		
	Иначе
		
		ЮТест.ОжидаетЧто(Истина)
			.Равно(Ложь);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьПользователяНегатив() Экспорт
	
	НовыйПользователь = Справочники.Пользователи.СоздатьЭлемент();
	
	Подражатель = ЮТТестовыеДанные.Подражатель();
	ФИО = Подражатель.Люди().ФИО(ЮТПодражатель_Люди.ПолЧеловека().Мужской);
	
	НовыйПользователь.Наименование = ФИО;
	НовыйПользователь.Недействителен = Истина;
	
	НовыйПользователь.Записать();
	
	ИдентификаторПропуска = пропуск_РаботаСПропусками.СгенерироватьИдентификаторПропускаПользователя(НовыйПользователь.Ссылка);
	
	Если ЗначениеЗаполнено(ИдентификаторПропуска) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Пользователи.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|ГДЕ
		|	Пользователи.пропуск_ИдентификаторПропуска = &пропуск_ИдентификаторПропуска
		|	И Пользователи.Недействителен = Ложь";
		
		Запрос.УстановитьПараметр("пропуск_ИдентификаторПропуска", ИдентификаторПропуска);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если НЕ Выборка.Следующий() Тогда
			
			ЮТест.ОжидаетЧто(Истина)
				.Равно(Истина);
			
		КонецЕсли;
		
	Иначе
		
		ЮТест.ОжидаетЧто(Истина)
			.Равно(Истина);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПодключитьКонтроллерПозитив() Экспорт
	
	ОбъектКонтроллера = Неопределено;
	
	Контроллер = пропуск_РаботаСКонтролллеромТурникетаВызовСервера.ПодключитьКонтроллер(ОбъектКонтроллера);
	
	ЮТест.ОжидаетЧто(Контроллер)
		.Заполнено();
	
КонецПроцедуры

Процедура ПодключитьКонтроллерНегатив() Экспорт
	
	ОбъектКонтроллера = Новый Структура;
	
	Контроллер = пропуск_РаботаСКонтролллеромТурникетаВызовСервера.ПодключитьКонтроллер(ОбъектКонтроллера);
	
	ЮТест.ОжидаетЧто(Контроллер)
		.Заполнено();
	
КонецПроцедуры

Процедура ОткрытьТурникетПозитив() Экспорт
	
	Отказ = НЕ пропуск_РаботаСКонтролллеромТурникетаВызовСервера.ОткрытьТурникет();
	
	ЮТест.ОжидаетЧто(Отказ)
		.Равно(Ложь);
	
КонецПроцедуры

Процедура ОткрытьТурникетНегатив() Экспорт
	
	Контроллер = Новый Структура;
	
	Отказ = НЕ пропуск_РаботаСКонтролллеромТурникетаВызовСервера.ОткрытьТурникет();
	
	ЮТест.ОжидаетЧто(Отказ)
		.Равно(Ложь);
	
КонецПроцедуры

Процедура ОткрытьТурникетСотрудникуПоПропускуПозитив() Экспорт
	
	// 1. Подготовка параметров и генерация данных для выполнения функции.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Пользователи.пропуск_ИдентификаторПропуска КАК пропуск_ИдентификаторПропуска
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|ГДЕ
	|	Пользователи.пропуск_ИдентификаторПропуска <> """"";
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		ЮТест.ОжидаетЧто(Истина)
			.Равно(Истина);
		Возврат;
	КонецЕсли;
	
	ИдентификаторПропуска = РезультатЗапроса.Выгрузить()[0].пропуск_ИдентификаторПропуска;
	
	// 2. Выполнение функции.
	Результат = пропуск_РаботаСКонтролллеромТурникетаВызовСервера.ОткрытьТурникет(ИдентификаторПропуска);
	
	ЮТест.ОжидаетЧто(Результат)
		.Равно(Истина);
	
КонецПроцедуры

Процедура ОткрытьТурникетСотрудникуПоПропускуНегатив() Экспорт
	
	ИдентификаторПропуска = "000";
	
	Результат = пропуск_РаботаСКонтролллеромТурникетаВызовСервера.ОтразитьОткрытиеТурникетаПоСотруднику(, ИдентификаторПропуска);
	
	ЮТест.ОжидаетЧто(Результат)
		.Равно(Ложь)
		;
	
КонецПроцедуры
